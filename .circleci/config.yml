version: '2.1'
orbs:
  slack: circleci/slack@4.1
  android: circleci/android@2.0.3
  github-cli: circleci/github-cli@2.1.0
commands:
  put-google-services-json:
    steps:
      - run: "touch ./app/google-services.json"
      - run: "echo $GOOGLE_CREDENTIAL > ./app/google-services.json"
  start-my-slack-noti:
    steps:
      - slack/notify:
          event: fail
          mentions: '@everyone'
          template: basic_fail_1
      - slack/notify:
          event: pass
          template: success_tagged_deploy_1
jobs:
  android-build-and-lint-test:
    working_directory: ~/code
    docker:
      - image: cimg/android:2021.10.2
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - put-google-services-json
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies
      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "app/build.gradle" }}
      - run:
          name: Run Tests
          command: ./gradlew lint test
      - store_artifacts: # for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: app/build/reports
          destination: reports
      - store_test_results: # for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: app/build/test-results
      - start-my-slack-noti
  android-unit-test:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1
    steps:
      - checkout
      - put-google-services-json
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/run-tests:
          test-command: ./gradlew testDebug
      - run:
          name: Save test results
          command: |
              mkdir -p ~/test-results/junit/
              find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache
      - android/save-build-cache
      - start-my-slack-noti
  android-ui-test:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1
    environment:
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - put-google-services-json
      - android/restore-gradle-cache
      - android/restore-build-cache
      - android/start-emulator-and-run-tests:
          test-command: ./gradlew connectedDebugAndroidTest
          system-image: system-images;android-29;google_apis;x86
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/outputs/androidTest-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
      - android/save-gradle-cache
      - android/save-build-cache
      - start-my-slack-noti
  release-build:
    executor:
      name: android/android-machine
      resource-class: large
      tag: 2021.10.1
    steps:
      - checkout
      - put-google-services-json
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Assemble release build
          command: |
            ./gradlew assembleRelease
      - store_artifacts:
          path: app/build/outputs/apk/release
        
workflows:
  test-and-deploy:
    jobs:
      - android-build-and-lint-test:
          context: 
            - slack
            - google-credential
      - android-unit-test:
          context: 
            - slack
            - google-credential
          requires:
            - android-build-and-lint-test
      - android-ui-test:
          context: 
            - slack
            - google-credential
          requires:
            - android-unit-test
      - release-build:
          context: 
            - slack
            - google-credential
      - github-cli/release:
          context:
            - GITHUB_CREDS
          filters:
            branches:
              only:
                - main
          tag: 'v1-<< pipeline.number >>'
          title: The initial release
          requires:
            - release-build